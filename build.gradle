plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'nebula.lint' version '16.17.0'
    id "org.owasp.dependencycheck" version "6.1.2"
}

group 'no.unit.bibs'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url  "https://dl.bintray.com/unit-nva/nva-commons" }
}

allprojects {
    apply plugin: 'nebula.lint'
    gradleLint.rules = ['unused-dependency']
}

dependencyCheck {
    failBuildOnCVSS=5
}

project.ext {
    junit5Version = '5.7.0'
    jacksonVersion = '2.11.2'
    awsSdkVersion = '1.11.946'
    nvaCommonsVersion = '0.7.4'
    slf4jVersion = '1.8.0-beta4'
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.972'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-core', version: awsSdkVersion
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
    implementation group: 'com.github.BIBSYSDEV', name: 'nva-commons', version: nvaCommonsVersion

    testImplementation group: 'com.github.BIBSYSDEV', name: 'nva-testutils', version: '0.1.16'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.5.7'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version

    shadowJar {
        archiveClassifier.set('')
        zip64 true
    }
}


test {
    useJUnitPlatform()
    failFast = true
    finalizedBy jacocoTestReport
}

jar.enabled = false
project.tasks.build.dependsOn project.tasks.shadowJar

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
    toolVersion '8.41';    // your choice here
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco")
    }
}

jacoco {
    toolVersion = "0.8.5"
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.36
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.6
            }
        }
    }
}

